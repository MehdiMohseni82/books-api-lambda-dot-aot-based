name: Deploy .NET AOT Lambda Functions

on:
  workflow_dispatch:
# Permission can be added at job level or workflow level    
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.x' # Specify the version of .NET SDK

      - name: Install CDK
        run: npm install -g aws-cdk

      - name: Install dependencies
        run: npm install
        working-directory: ./deploy

      - name: Install .Net AOT ARM64 build toolchain
        run: |
          sudo dpkg --add-architecture arm64 
          sudo bash -c 'cat > /etc/apt/sources.list.d/arm64.list <<EOF
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-updates main restricted
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse
          EOF'
          sudo sed -i -e 's/deb http/deb [arch=amd64] http/g' /etc/apt/sources.list
          sudo sed -i -e 's/deb mirror/deb [arch=amd64] mirror/g' /etc/apt/sources.list
          sudo apt update
          sudo apt install -y clang llvm binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu zlib1g-dev:arm64

      - name: Build AddEditBook Function
        run: dotnet publish -c Release -r linux-arm64 --self-contained false ./BooksApiNative.Functions.AddEditBook

      - name: Build DeleteBook Function
        run: dotnet publish -c Release -r linux-arm64 --self-contained false ./BooksApiNative.Functions.DeleteBook

      - name: Build GetBook Function
        run: dotnet publish -c Release -r linux-arm64 --self-contained false ./BooksApiNative.Functions.GetBook

      - name: Build GetBooks Function
        run: dotnet publish -c Release -r linux-arm64 --self-contained false ./BooksApiNative.Functions.GetBooks

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          role-session-name: DeployLambda
          aws-region: eu-north-1

      - name: CDK Deploy
        run: cdk deploy --require-approval never
        working-directory: ./deploy